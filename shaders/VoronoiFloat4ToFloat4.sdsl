shader VoronoiFloat4ToFloat4 : Float4ToFloat4
{

    float3 hash(float3 x){
        x = float3(
            dot(x, float3(127.1, 311.7,  74.7)),
            dot(x, float3(269.5, 183.3, 246.1)),
            dot(x, float3(113.5, 271.9, 124.6))
        );

        return frac(sin(x) * 43758.5453123);
    }

    // returns closest, second closest, and cell id
    override float4 Compute(float4 p)
    {
        float3 x = p.xyz;
        float3 n = floor(x);
        float3 f = frac(x);

        float4 m = 8;

        float id = 0.0;
        float2 res = 100.0;

        for(int k=-1; k<=1; k++ )
        for(int j=-1; j<=1; j++ )
        for(int i=-1; i<=1; i++ ){
            float3 b = float3(i, j, k);
            float3 o = hash( n + b );
            float3 r = b - f + o;
            float  d = dot( r, r );

            if( d < m.x )
			    m = float4( d, o );

            if( d < res.x ){
                res = float2( d, res.x );			
            }else if( d < res.y ){
                res.y = d;
            }
        }

        return float4(abs(m.y+m.z), sqrt( res ), 0 );
    }
};